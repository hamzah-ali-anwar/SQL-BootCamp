-- 𝗪𝗶𝗻𝗱𝗼𝘄 𝗙𝘂𝗻𝗰𝘁𝗶𝗼𝗻𝘀

-- Find the cumulative sum of sales for each employee.


-- Rank employees based on their sales within their department.


-- Calculate a running total of orders by order date.


-- Identify the top three salaries in each department.


-- Compute the difference between the current and previous month's sales.

-- 𝗖𝗼𝗺𝗺𝗼𝗻 𝗧𝗮𝗯𝗹𝗲 𝗘𝘅𝗽𝗿𝗲𝘀𝘀𝗶𝗼𝗻𝘀 (𝗖𝗧𝗘)

-- Write a recursive CTE to generate a sequence of numbers from 1 to 100.


-- Use a CTE to find employees who directly and indirectly report to a specific manager.


-- Calculate the factorial of a number using a recursive CTE.


-- Flatten a hierarchical organization chart using a CTE.


-- Use a CTE to calculate year-over-year growth in sales.

-- 𝗝𝗼𝗶𝗻𝘀 (𝗜𝗻𝗻𝗲𝗿, 𝗢𝘂𝘁𝗲𝗿, 𝗖𝗿𝗼𝘀𝘀, 𝗦𝗲𝗹𝗳)

-- Retrieve a list of customers who have placed orders (Inner Join).


-- Find employees who have not been assigned to any projects (Left Join).


-- Get a list of projects without assigned employees (Right Join).


-- Generate all possible pairs of products (Cross Join).


-- Match employees to themselves to find pairs from the same department (Self Join).

-- 𝗦𝘂𝗯𝗾𝘂𝗲𝗿𝗶𝗲𝘀

-- Find employees earning more than the average salary in their department.


-- Retrieve customers who have placed more than 5 orders.


-- List products that have never been ordered.


-- Identify the second highest salary in the company using a subquery.


-- Find departments where all employees earn above a specific threshold.

-- 𝗔𝗴𝗴𝗿𝗲𝗴𝗮𝘁𝗲 𝗙𝘂𝗻𝗰𝘁𝗶𝗼𝗻𝘀

-- Calculate the total revenue generated by each product.


-- Find the average salary in each department.


-- Count the number of orders placed by each customer.



-- Find the maximum and minimum sales for each region.


-- Calculate the standard deviation of employee salaries.

-- 𝗜𝗻𝗱𝗲𝘅𝗶𝗻𝗴 𝗮𝗻𝗱 𝗣𝗲𝗿𝗳𝗼𝗿𝗺𝗮𝗻𝗰𝗲

-- Identify queries that would benefit from indexing.


-- Compare execution plans with and without an index on a specific column.


-- Check which indexes exist on a table.


-- Optimize a slow query using indexing.


-- Write a query to update a column using an indexed lookup.

